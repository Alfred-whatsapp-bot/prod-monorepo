{"version":3,"file":"main.e4209a1cc3c7c311.js","mappings":"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","names":["environment","production","urlApi","logged","AuthService","constructor","http","this","baseUrl","login","credentials","post","pipe","tap","response","localStorage","setItem","token","email","isLogged","logout","removeItem","isLoggedIn","log","core","factory","ROUTES","path","title","icon","class","SidebarComponent","authService","router","ngOnInit","menuItems","filter","menuItem","onLogout","navigate","isMobileMenu","$","window","width","selectors","NavbarComponent","location","element","sidebarVisible","listTitles","listTitle","navbar","nativeElement","toggleButton","getElementsByClassName","events","subscribe","event","sidebarClose","$layer","document","remove","mobile_menu_visible","sidebarOpen","body","getElementsByTagName","setTimeout","classList","add","sidebarToggle","$toggle","createElement","setAttribute","querySelectorAll","appendChild","contains","onclick","bind","getTitle","titlee","prepareExternalUrl","ctx","AdminLayoutComponent","navigator","platform","indexOf","elemMainPanel","querySelector","elemSidebar","ev","lastPoppedUrl","url","yScrollStack","push","scrollY","scrollTo","pop","_router","scrollTop","matchMedia","matches","isMac","ps","perfect_scrollbar_esm","window_width","jquery","$sidebar","$sidebar_responsive","$sidebar_img_container","find","hasClass","addClass","click","stopPropagation","cancelBubble","siblings","removeClass","new_color","data","length","attr","$full_page_background","parent","new_image","fadeOut","css","fadeIn","ngAfterViewInit","runOnRouteChange","isMaps","slice","update","bool","toUpperCase","LoginComponent","loginForm","fesm2020_forms","senha","onSubmit","valid","value","AuthGuard","canActivate","route","state","routes","redirectTo","pathMatch","component","children","loadChildren","__webpack_require__","then","m","AdminLayoutModule","AppRoutingModule","common","platform_browser","useHash","ComponentsModule","fesm2020_button","autocomplete","card","fesm2020_checkbox","chips","divider","expansion","input","list","menu","progress_spinner","paginator","fesm2020_core","fesm2020_select","sidenav","snack_bar","sort","table","tabs","toolbar","form_field","button_toggle","tree","overlay","portal","badge","grid_list","fesm2020_radio","datepicker","tooltip","AppComponent","AppModule","bootstrap","animations","bootstrapModule"],"sourceRoot":"webpack:///","sources":["./src/environments/environment.ts","./src/app/auth/auth.service.ts","./src/app/shared/sidebar/sidebar.component.html","./src/app/shared/sidebar/sidebar.component.ts","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/layouts/admin-layout/admin-layout.component.html","./src/app/shared/login/login.component.html","./src/app/shared/login/login.component.ts","./src/app/auth/auth.guard.ts","./src/app/app.routing.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export const environment = {\r\n  production: false,\r\n  urlApi: \"http://localhost:3001\",\r\n  logged: false,\r\n};\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { environment } from \"environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  isLogged = environment.logged;\n  baseUrl: string = \"\";\n\n  constructor(private http: HttpClient) {\n    this.baseUrl = environment.urlApi;\n  }\n\n  login(credentials: { email: string; senha: string }): Observable<any> {\n    return this.http\n      .post<{ token: string }>(`${this.baseUrl}/api/login`, credentials)\n      .pipe(\n        tap((response) => {\n          localStorage.setItem(\"token\", response.token);\n          localStorage.setItem(\"sessionName\", response.email);\n          this.isLogged = true;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n    this.isLogged = false;\n  }\n\n  isLoggedIn(): boolean {\n    console.log(\"isLogged: \", this.isLogged);\n    return this.isLogged;\n  }\n}\n","<div class=\"logo\">\r\n  <a href=\"javascript:void(0)\" class=\"simple-text\">\r\n    <img\r\n      src=\"/assets/img/chatbotIcon.webp\"\r\n      alt=\"icone de robozinho\"\r\n      style=\"width: 90px\"\r\n      target=\"_blank\"\r\n  /></a>\r\n</div>\r\n<div class=\"sidebar-wrapper\">\r\n  <ul class=\"nav\">\r\n    <li\r\n      routerLinkActive=\"active\"\r\n      *ngFor=\"let menuItem of menuItems\"\r\n      class=\"{{ menuItem.class }} nav-item\"\r\n    >\r\n      <a class=\"nav-link\" [routerLink]=\"[menuItem.path]\">\r\n        <i class=\"material-icons\">{{ menuItem.icon }}</i>\r\n        <p>{{ menuItem.title }}</p>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <div *ngIf=\"isMobileMenu()\">\r\n    <ul class=\"nav navbar-nav nav-mobile-menu\">\r\n      <li class=\"nav-item\">\r\n        <a\r\n          class=\"nav-link\"\r\n          href=\"javascript:void(0)\"\r\n          id=\"navbarDropdownLogout\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <i class=\"material-icons\">person</i>\r\n          <!-- <p>\r\n            <span class=\"d-lg-none d-md-block\">Conta</span>\r\n          </p> -->\r\n          <button mat-button (click)=\"onLogout()\">Sair</button>\r\n        </a>\r\n        <!-- <div\r\n          class=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"navbarDropdownLogout\"\r\n        >\r\n          <button mat-button (click)=\"onLogout()\">Logout</button>\r\n        </div> -->\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"app/auth/auth.service\";\r\n\r\ndeclare const $: any;\r\ndeclare interface RouteInfo {\r\n  path: string;\r\n  title: string;\r\n  icon: string;\r\n  class: string;\r\n}\r\nexport const ROUTES: RouteInfo[] = [\r\n  { path: \"/home\", title: \"Página Inicial\", icon: \"dashboard\", class: \"\" },\r\n  { path: \"/perfil\", title: \"Perfil\", icon: \"person\", class: \"\" },\r\n  {\r\n    path: \"/produtos\",\r\n    title: \"Produtos\",\r\n    icon: \"whatshot\",\r\n    class: \"\",\r\n  },\r\n  { path: \"/dashboard\", title: \"Relatórios\", icon: \"list_alt\", class: \"\" },\r\n];\r\n\r\n@Component({\r\n  selector: \"app-sidebar\",\r\n  templateUrl: \"./sidebar.component.html\",\r\n  styleUrls: [\"./sidebar.component.scss\"],\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  menuItems: any[];\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.menuItems = ROUTES.filter((menuItem) => menuItem);\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  isMobileMenu() {\r\n    if ($(window).width() > 991) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit, ElementRef } from \"@angular/core\";\r\nimport { ROUTES } from \"../sidebar/sidebar.component\";\r\nimport { Location } from \"@angular/common\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"app/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-navbar\",\r\n  templateUrl: \"./navbar.component.html\",\r\n  styleUrls: [\"./navbar.component.scss\"],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  private listTitles: any[];\r\n  location: Location;\r\n  mobile_menu_visible: any = 0;\r\n  private toggleButton: any;\r\n  private sidebarVisible: boolean;\r\n\r\n  constructor(\r\n    location: Location,\r\n    private element: ElementRef,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.location = location;\r\n    this.sidebarVisible = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.listTitles = ROUTES.filter((listTitle) => listTitle);\r\n    const navbar: HTMLElement = this.element.nativeElement;\r\n    this.toggleButton = navbar.getElementsByClassName(\"navbar-toggler\")[0];\r\n    this.router.events.subscribe((event) => {\r\n      this.sidebarClose();\r\n      let $layer: any = document.getElementsByClassName(\"close-layer\")[0];\r\n      if ($layer) {\r\n        $layer.remove();\r\n        this.mobile_menu_visible = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  sidebarOpen() {\r\n    const toggleButton = this.toggleButton;\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    setTimeout(function () {\r\n      toggleButton.classList.add(\"toggled\");\r\n    }, 500);\r\n\r\n    body.classList.add(\"nav-open\");\r\n\r\n    this.sidebarVisible = true;\r\n  }\r\n  sidebarClose() {\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    this.toggleButton.classList.remove(\"toggled\");\r\n    this.sidebarVisible = false;\r\n    body.classList.remove(\"nav-open\");\r\n  }\r\n  sidebarToggle() {\r\n    let $toggle = document.getElementsByClassName(\"navbar-toggler\")[0];\r\n\r\n    if (this.sidebarVisible === false) {\r\n      this.sidebarOpen();\r\n    } else {\r\n      this.sidebarClose();\r\n    }\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    if (this.mobile_menu_visible == 1) {\r\n      body.classList.remove(\"nav-open\");\r\n      if ($layer) {\r\n        $layer.remove();\r\n      }\r\n      setTimeout(function () {\r\n        $toggle.classList.remove(\"toggled\");\r\n      }, 400);\r\n\r\n      this.mobile_menu_visible = 0;\r\n    } else {\r\n      setTimeout(function () {\r\n        $toggle.classList.add(\"toggled\");\r\n      }, 430);\r\n\r\n      var $layer = document.createElement(\"div\");\r\n      $layer.setAttribute(\"class\", \"close-layer\");\r\n\r\n      if (body.querySelectorAll(\".main-panel\")) {\r\n        document.getElementsByClassName(\"main-panel\")[0].appendChild($layer);\r\n      } else if (body.classList.contains(\"off-canvas-sidebar\")) {\r\n        document\r\n          .getElementsByClassName(\"wrapper-full-page\")[0]\r\n          .appendChild($layer);\r\n      }\r\n\r\n      setTimeout(function () {\r\n        $layer.classList.add(\"visible\");\r\n      }, 100);\r\n\r\n      $layer.onclick = function () {\r\n        //asign a function\r\n        body.classList.remove(\"nav-open\");\r\n        this.mobile_menu_visible = 0;\r\n        $layer.classList.remove(\"visible\");\r\n        setTimeout(function () {\r\n          $layer.remove();\r\n          $toggle.classList.remove(\"toggled\");\r\n        }, 400);\r\n      }.bind(this);\r\n\r\n      body.classList.add(\"nav-open\");\r\n      this.mobile_menu_visible = 1;\r\n    }\r\n  }\r\n\r\n  getTitle() {\r\n    let titlee = this.location.prepareExternalUrl(this.location.path());\r\n\r\n    for (const element of this.listTitles) {\r\n      if (element.path === titlee) {\r\n        return element.title;\r\n      }\r\n    }\r\n    return titlee;\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top\"\r\n>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"navbar-wrapper\">\r\n      <a class=\"navbar-brand\" href=\"javascript:void(0)\">{{ getTitle() }}</a>\r\n    </div>\r\n    <button\r\n      mat-raised-button\r\n      class=\"navbar-toggler\"\r\n      type=\"button\"\r\n      (click)=\"sidebarToggle()\"\r\n    >\r\n      <span class=\"sr-only\">Toggle navigation</span>\r\n      <span class=\"navbar-toggler-icon icon-bar\"></span>\r\n      <span class=\"navbar-toggler-icon icon-bar\"></span>\r\n      <span class=\"navbar-toggler-icon icon-bar\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item dropdown\">\r\n          <a\r\n            class=\"nav-link\"\r\n            href=\"javascript:void(0)\"\r\n            id=\"navbarDropdownMenuLink\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i class=\"material-icons\">notifications</i>\r\n          </a>\r\n          <div\r\n            class=\"dropdown-menu dropdown-menu-right\"\r\n            aria-labelledby=\"navbarDropdownMenuLink\"\r\n          >\r\n            <a\r\n              class=\"dropdown-item list-group-item-primary\"\r\n              href=\"javascript:void(0)\"\r\n              >Notificações</a\r\n            >\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            href=\"javascript:void(0)\"\r\n            id=\"navbarDropdownLogout\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i class=\"material-icons\">person</i>\r\n            <!-- <p>\r\n              <span class=\"d-lg-none d-md-block\">Conta</span>\r\n            </p> -->\r\n            <div\r\n              class=\"dropdown-menu dropdown-menu-right\"\r\n              aria-labelledby=\"navbarDropdownLogout\"\r\n            >\r\n              <button mat-button (click)=\"onLogout()\">Sair</button>\r\n            </div>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport * as $ from \"jquery\";\r\nimport { filter, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor( public location: Location, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      if (isWindows && !document.getElementsByTagName('body')[0].classList.contains('sidebar-mini')) {\r\n          // if we are on windows OS we activate the perfectScrollbar function\r\n\r\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      } else {\r\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      }\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      this.location.subscribe((ev:PopStateEvent) => {\r\n          this.lastPoppedUrl = ev.url;\r\n      });\r\n       this.router.events.subscribe((event:any) => {\r\n          if (event instanceof NavigationStart) {\r\n             if (event.url != this.lastPoppedUrl)\r\n                 this.yScrollStack.push(window.scrollY);\r\n         } else if (event instanceof NavigationEnd) {\r\n             if (event.url == this.lastPoppedUrl) {\r\n                 this.lastPoppedUrl = undefined;\r\n                 window.scrollTo(0, this.yScrollStack.pop());\r\n             } else\r\n                 window.scrollTo(0, 0);\r\n         }\r\n      });\r\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n           elemMainPanel.scrollTop = 0;\r\n           elemSidebar.scrollTop = 0;\r\n      });\r\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n          let ps = new PerfectScrollbar(elemMainPanel);\r\n          ps = new PerfectScrollbar(elemSidebar);\r\n      }\r\n\r\n      const window_width = $(window).width();\r\n      let $sidebar = $('.sidebar');\r\n      let $sidebar_responsive = $('body > .navbar-collapse');\r\n      let $sidebar_img_container = $sidebar.find('.sidebar-background');\r\n\r\n\r\n      if(window_width > 767){\r\n          if($('.fixed-plugin .dropdown').hasClass('show-dropdown')){\r\n              $('.fixed-plugin .dropdown').addClass('open');\r\n          }\r\n\r\n      }\r\n\r\n      $('.fixed-plugin a').click(function(event){\r\n        // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active\r\n          if($(this).hasClass('switch-trigger')){\r\n              if(event.stopPropagation){\r\n                  event.stopPropagation();\r\n              }\r\n              else if(window.event){\r\n                 window.event.cancelBubble = true;\r\n              }\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .badge').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n\r\n          $(this).siblings().removeClass('active');\r\n          $(this).addClass('active');\r\n\r\n          var new_color = $(this).data('color');\r\n\r\n          if($sidebar.length !== 0){\r\n              $sidebar.attr('data-color', new_color);\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.attr('data-color',new_color);\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .img-holder').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n          $(this).parent('li').siblings().removeClass('active');\r\n          $(this).parent('li').addClass('active');\r\n\r\n\r\n          var new_image = $(this).find(\"img\").attr('src');\r\n\r\n          if($sidebar_img_container.length !=0 ){\r\n              $sidebar_img_container.fadeOut('fast', function(){\r\n                 $sidebar_img_container.css('background-image','url(\"' + new_image + '\")');\r\n                 $sidebar_img_container.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($full_page_background.length != 0){\r\n\r\n              $full_page_background.fadeOut('fast', function(){\r\n                 $full_page_background.css('background-image','url(\"' + new_image + '\")');\r\n                 $full_page_background.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.css('background-image','url(\"' + new_image + '\")');\r\n          }\r\n      });\r\n  }\r\n  ngAfterViewInit() {\r\n      this.runOnRouteChange();\r\n  }\r\n  isMaps(path){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      titlee = titlee.slice( 1 );\r\n      if(path == titlee){\r\n          return false;\r\n      }\r\n      else {\r\n          return true;\r\n      }\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const ps = new PerfectScrollbar(elemMainPanel);\r\n      ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n      let bool = false;\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n          bool = true;\r\n      }\r\n      return bool;\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <div\r\n    class=\"sidebar\"\r\n    data-color=\"danger\"\r\n    data-background-color=\"white\"\r\n    data-image=\"./assets/img/sidebar-1.jpg\"\r\n  >\r\n    <app-sidebar></app-sidebar>\r\n    <div\r\n      class=\"sidebar-background\"\r\n      style=\"background-image: url(./assets/img/sidebar-4.jpg)\"\r\n    ></div>\r\n  </div>\r\n  <div class=\"main-panel\">\r\n    <app-navbar></app-navbar>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","<div class=\"container\">\r\n  <form\r\n    class=\"form mat-elevation-z8\"\r\n    [formGroup]=\"loginForm\"\r\n    (ngSubmit)=\"onSubmit()\"\r\n  >\r\n    <div class=\"login-title\">\r\n      <img src=\"../../../assets/img/chatbotIcon.webp\" alt=\"zap\" />\r\n    </div>\r\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n      <mat-label>Email</mat-label>\r\n      <input type=\"email\" matInput formControlName=\"email\" />\r\n      <mat-error *ngIf=\"!loginForm.valid\"> Email inválido </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n      <mat-label>Senha</mat-label>\r\n      <input type=\"password\" matInput formControlName=\"senha\" />\r\n      <mat-error *ngIf=\"!loginForm.valid\"> Senha incorreta </mat-error>\r\n    </mat-form-field>\r\n    <div class=\"btn-group\">\r\n      <button mat-raised-button color=\"warn\" type=\"submit\" [disabled]=\"true\">\r\n        Registrar\r\n      </button>\r\n      <button\r\n        mat-raised-button\r\n        color=\"warn\"\r\n        type=\"submit\"\r\n        [disabled]=\"!loginForm.valid\"\r\n      >\r\n        Entrar\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../auth/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(\"email@mail.com\", [Validators.required, Validators.email]),\n      senha: new FormControl(\"1234\", [Validators.required]),\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(() => {\n        this.router.navigate([\"/\"]);\n      });\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { AdminLayoutComponent } from \"./layouts/admin-layout/admin-layout.component\";\r\nimport { LoginComponent } from \"./shared/login/login.component\";\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"home\", pathMatch: \"full\", canActivate: [AuthGuard] },\r\n  {\r\n    path: \"\",\r\n    component: AdminLayoutComponent,\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        loadChildren: () =>\r\n          import(\"./layouts/admin-layout/admin-layout.module\").then(\r\n            (m) => m.AdminLayoutModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n    ],\r\n  },\r\n  { path: \"login\", component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes, {\r\n      useHash: false,\r\n    }),\r\n  ],\r\n  exports: [],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nimport { NavbarComponent } from \"./navbar/navbar.component\";\r\nimport { SidebarComponent } from \"./sidebar/sidebar.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { PortalModule } from \"@angular/cdk/portal\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\r\nimport { MatRippleModule } from \"@angular/material/core\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatTreeModule } from \"@angular/material/tree\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    MatBadgeModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n  ],\r\n  declarations: [NavbarComponent, SidebarComponent, LoginComponent],\r\n  exports: [NavbarComponent, SidebarComponent],\r\n})\r\nexport class ComponentsModule {}\r\n","import { Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","\r\n<router-outlet></router-outlet>\r\n","import { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AppRoutingModule } from \"./app.routing\";\r\nimport { ComponentsModule } from \"./shared/shared.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { AdminLayoutComponent } from \"./layouts/admin-layout/admin-layout.component\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { PaginaInicialComponent } from \"./pages/pagina-inicial/pagina-inicial.component\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatRippleModule } from \"@angular/material/core\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatTreeModule } from \"@angular/material/tree\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { PortalModule } from \"@angular/cdk/portal\";\r\nimport { UserProfileComponent } from \"./pages/perfil/user-profile.component\";\r\nimport { TableListComponent } from \"./pages/produtos/table-list.component\";\r\nimport { DashboardComponent } from \"./pages/dashboard/dashboard.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    ComponentsModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    MatBadgeModule,\r\n    MatGridListModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    AdminLayoutComponent,\r\n    PaginaInicialComponent,\r\n    UserProfileComponent,\r\n    TableListComponent,\r\n    DashboardComponent,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"x_google_ignoreList":[]}